#+EXPORT_EXCLUDE_TAGS: nopub
#+TITLE:Geb

* Geb
** Another web testing framework?
*** Geb uses CSS / Jquery like syntax for selecting HTML elements


*** Page-Object Pattern
** Installation
- Recommended Groovy Version 1.7.5
- I've tested on Ubuntu Linux, Windows XP, Cygwin
- For this demo, you need Firefox installed
- To test other browsers (Chrome, Internet Explorer), I /think/ you
  need to have that browser installed on your system.
** Quick Start
Run this from the Groovy Console
:PROPERTIES:
:ID: a46d05d4-6d01-494d-833d-7245ccf530b9
:END:
#+begin_src groovy :tangle simpleTest.groovy :noweb yes
  <<header>>  
        assert title == "Help - About"
        // Un-comment driver.close() to close the browser window
        // driver.close()  
        assert $("a", text:"Loooogin").size() == 0
        assert $("a", text:"Login").size() == 1
  <<footer>>
#+end_src

- Grapes pulls down dependency goodies.  How it works is beyond me.
- Selenium runs under the hood, and creates an instance of the specified browser.
** CSS / Jquery like syntax for selecting HTML elements
Test results are some kind of instance of selenium's FirefoxWebElement
http://webdriver.googlecode.com/svn/javadoc/org/openqa/selenium/firefox/FirefoxWebElement.html
** Attribute Selectors
:PROPERTIES:
:ID: 56d305d5-f9a0-4d8b-bdf4-2ef7e139d86a
:END:
Say we have the following HTML:

#+begin_src html
<h3 class="reallynow">Thanks</h3>
#+end_src

Here's the Geb code we need to match the HTML.  (Both expressions match)

#+srcname: simpleTestsAttributes
#+begin_src groovy :noweb tangle
    <<header>>
    assert $("h3", class: "reallynow", text: "Thanks").size() == 1
    assert $("h3.reallynow", text: "Thanks").size() == 1
    <<footer>>
#+end_src

** Testing Relationships
:PROPERTIES:
:ID: 242aa226-c2a5-40eb-9fe0-8b3c78d9f636
:END:
Here we have a <p> element that's right next to an h3 which has the
version of our software.  We can make sure the website shows the
correct version.

#+begin_src html
<h3 class="reallynow">Version</h3>
<p>Version 0.2 "Dangle"</p>
#+end_src

#+srcname: simpleTestRelationships
#+begin_src groovy
assert $("h3.reallynow").siblings("p").find { it.text() =~/Dangle/ }
assert $("h3.reallynow").siblings("p").find { it.text() =~/0\.2/ }
#+end_src
*** Render :nopub:
#+begin_src groovy :tangle testSimpleRelationship.groovy :noweb tangle
<<header>>
<<simpleTestRelationships>>
<<footer>>
#+end_src
** Failed Login
#+srcname: failedLogin
#+begin_src groovy :tangle testLoginFailure.groovy :noweb tangle
<<header>>
$("a", text:"Login").click()
$("#loginForm").username = "badguy"
$("#loginForm").password = "badguypassword"
$("#login").click()
assert title == "Login"
assert $("*", text: ~/.*Invalid.*username.*password/).size() > 0
<<footer>>
#+end_src
*** Render :nopub:
#+begin_src groovy :tangle testFailedLogin.groovy :noweb tangle
<<header>>
<<failedLogin>>
<<footer>>
#+end_src
** Successful Login
:PROPERTIES:
:ID: 87777828-2f37-46d9-b183-fa837a521e38
:END:
#+srcname: successfulLogin
#+begin_src groovy
    $("a", text:"Login").click()
    $("#loginForm").username = "gug"
    $("#loginForm").password = "groovy18"
    $("#login").click()
    assert $("*", text: ~/.*Welcome to Enrollio, gug!.*/).size() > 0
#+end_src
*** Render :nopub:
#+begin_src groovy :tangle testLoginSuccess.groovy :noweb tangle
<<header>>
<<successfulLogin>>
<<footer>>
#+end_src

** One more powerful example
#+srcname:complexExample
#+begin_src groovy
$("a", text:"Students").click()
        def studentsTable = $("h3", text: ~/.*Students.*/).next("table")
        def linkToWoodstockParent = studentsTable.find("tr td:first-child a", text:contains("Woodstock Jackson"))
        assert linkToWoodstockParent.size() != 0
        linkToWoodstockParent.click()
        assert title == "Contact:Woodstock Jackson"
        // TODO go back
        driver.navigate().back()

        def linkToWoodstockStudent = studentsTable.find("tr td:nth-child(2) a", text:contains("Woodstock Jackson"))
        assert linkToWoodstockStudent.size() != 0
        linkToWoodstockStudent.click()
        assert title == "Student: Woodstock Jackson"
#+end_src
*** Render :nopub:
#+begin_src groovy :tangle testComplexExample.groovy :noweb tangle
<<header>>
<<successfulLogin>>
<<complexExample>>
<<footer>>
#+end_src
* Source Code                                                   :nopub:
:PROPERTIES:
:ID: df2c04db-2a1f-40d7-9884-f44886a25ede
:END:
#+srcname: header
#+begin_src groovy
@Grapes([
              @Grab("org.codehaus.geb:geb-core:latest.release"),
              @Grab("org.seleniumhq.selenium:selenium-firefox-driver:latest.release")
])
import geb.Browser
Browser.drive("http://enrollio.org") {
#+end_src

#+srcname: footer
#+begin_src groovy
}
#+end_src
* Moving Along
- Need to find out how to get more descriptive test results when running simple tests.
- Would need to replicate a lot of code when running similar tests

* See Also
- Geb home page:
- Geb Mailing List: http://markmail.org/list/org.codehaus.geb.user
